nextflow_workflow {

    name "Test Workflow "
    script "workflows/demultiplex.nf"
    workflow "DEMULTIPLEX"
    tag "kraken"
    tag "pipeline"

    test("KRAKEN") {

        setup {
            run("UNTAR") {
                script "modules/nf-core/untar/main.nf"
                process {
                    """
                    input[0] = Channel.of([ [], file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/db/kraken2.tar.gz", checkIfExists: true) ])
                    """
                }
            }
        }

        when {
            params {
                input         = 'https://raw.githubusercontent.com/nf-core/test-datasets/demultiplex/samplesheet/1.3.0/flowcell_input.csv'
                demultiplexer = 'bclconvert'
                outdir        = "$outputDir"
                //kraken_db     = UNTAR.out.untar.map{ it[1] }
            }
        }

        then {
            assertAll(
                { assert workflow.success },
            )
        }

    }

}
